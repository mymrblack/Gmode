/*
 * lidar_delay.h
 *
 *  Created on: 2017Äê3ÔÂ4ÈÕ
 *      Author: Lin
 */

#ifndef SRC_LIDAR_DELAY_H_
#define SRC_LIDAR_DELAY_H_

#define DELAY_CTRL_REG  0
#define DELAY_OUT1_REG  4
#define DELAY_OUT2_REG  8
#define DELAY_OUT3_REG  12
#define DELAY_OUT4_REG  16

#define TSTART_CONFIG_REG      20

#define DELAY_BASEADDR  here_should_be_changed

#define DELAY_mWriteReg(BaseAddress, RegOffset, Data) \
   	Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))

/**
 *
 * Read a value from a PPS register. A 32 bit read is performed.
 * If the component is implemented in a smaller width, only the least
 * significant data is read from the register. The most significant data
 * will be read as 0.
 *
 * @param   BaseAddress is the base address of the PPS device.
 * @param   RegOffset is the register offset from the base to write to.
 *
 * @return  Data is the data from the register.
 *
 * @note
 * C-style signature:
 * 	Xuint32 PPS_mReadReg(Xuint32 BaseAddress, unsigned RegOffset)
 *
 */
#define DELAY_mReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))

/************************** Function Prototypes ****************************/
/**
 *
 * Run a self-test on the driver/device. Note this may be a destructive test if
 * resets of the device are performed.
 *
 * If the hardware system is not built correctly, this function may never
 * return to the caller.
 *
 * @param   baseaddr_p is the base address of the PPS instance to be worked on.
 *
 * @return
 *
 *    - XST_SUCCESS   if all self-test code passed
 *    - XST_FAILURE   if any self-test code failed
 *
 * @note    Caching must be turned off for this function to work.
 * @note    Self test may fail if data memory and device are not on the same bus.
 *
 */
XStatus DELAY_SelfTest(void * baseaddr_p);

#endif /* SRC_LIDAR_DELAY_H_ */
